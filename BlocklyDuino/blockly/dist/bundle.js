!function(n){var e={};function o(i){if(e[i])return e[i].exports;var l=e[i]={i:i,l:!1,exports:{}};return n[i].call(l.exports,l,l.exports,o),l.l=!0,l.exports}o.m=n,o.c=e,o.d=function(n,e,i){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var l in n)o.d(i,l,function(e){return n[e]}.bind(null,l));return i},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="",o(o.s=0)}([function(n,e,o){"use strict";Blockly.Arduino=new Blockly.Generator("Arduino"),Blockly.Arduino.addReservedWords("setup,loop,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,interger, constants,floating,point,void,bookean,char,unsigned,byte,int,word,long,float,double,string,String,array,static, volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts"),Blockly.Arduino.ORDER_ATOMIC=0,Blockly.Arduino.ORDER_UNARY_POSTFIX=1,Blockly.Arduino.ORDER_UNARY_PREFIX=2,Blockly.Arduino.ORDER_MULTIPLICATIVE=3,Blockly.Arduino.ORDER_ADDITIVE=4,Blockly.Arduino.ORDER_SHIFT=5,Blockly.Arduino.ORDER_RELATIONAL=6,Blockly.Arduino.ORDER_EQUALITY=7,Blockly.Arduino.ORDER_BITWISE_AND=8,Blockly.Arduino.ORDER_BITWISE_XOR=9,Blockly.Arduino.ORDER_BITWISE_OR=10,Blockly.Arduino.ORDER_LOGICAL_AND=11,Blockly.Arduino.ORDER_LOGICAL_OR=12,Blockly.Arduino.ORDER_CONDITIONAL=13,Blockly.Arduino.ORDER_ASSIGNMENT=14,Blockly.Arduino.ORDER_NONE=99;var i={arduino:{description:"Arduino standard-compatible board",digital:[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]],analog:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]],serial:9600},arduino_mega:{description:"Arduino Mega-compatible board"}};i.default=i.arduino,Blockly.Arduino.init=function(n){Blockly.Arduino.definitions_=Object.create(null),Blockly.Arduino.setups_=Object.create(null),Blockly.Arduino.variableDB_?Blockly.Arduino.variableDB_.reset():Blockly.Arduino.variableDB_=new Blockly.Names(Blockly.Arduino.RESERVED_WORDS_);var e=[];n=Blockly.Variables.allVariables(n);for(var o=0;o<n.length;o++)e[o]="int "+Blockly.Arduino.variableDB_.getName(n[o],Blockly.Variables.NAME_TYPE)+";\n";Blockly.Arduino.definitions_.variables=e.join("\n")},Blockly.Arduino.finish=function(n){n="void loop() \n{\n"+(n=(n="  "+n.replace(/\n/g,"\n  ")).replace(/\n\s+$/,"\n"))+"\n}";var e,o=[],i=[];for(e in Blockly.Arduino.definitions_){var l=Blockly.Arduino.definitions_[e];l.match(/^#include/)?o.push(l):i.push(l)}for(e in l=[],Blockly.Arduino.setups_)l.push(Blockly.Arduino.setups_[e]);return(o.join("\n")+"\n\n"+i.join("\n")+"\nvoid setup() \n{\n  "+l.join("\n  ")+"\n}\n\n").replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+n},Blockly.Arduino.scrubNakedValue=function(n){return n+";\n"},Blockly.Arduino.quote_=function(n){return'"'+(n=n.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\$/g,"\\$").replace(/'/g,"\\'"))+'"'},Blockly.Arduino.scrub_=function(n,e){if(null===e)return"";var o="";if(!n.outputConnection||!n.outputConnection.targetConnection){var i=n.getCommentText();i&&(o+=Blockly.Arduino.prefixLines(i,"// ")+"\n");for(var l=0;l<n.inputList.length;l++)n.inputList[l].type==Blockly.INPUT_VALUE&&(i=n.inputList[l].connection.targetBlock())&&(i=Blockly.Arduino.allNestedComments(i))&&(o+=Blockly.Arduino.prefixLines(i,"// "))}return l=n.nextConnection&&n.nextConnection.targetBlock(),o+e+(l=Blockly.Arduino.blockToCode(l))},Blockly.Arduino.base={},Blockly.Arduino.base_delay=function(){return"delay("+(Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC)||"1000")+");\n"},Blockly.Arduino.base_map=function(){return["map("+Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE)+", 0, 1024, 0, "+Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC)+")",Blockly.Arduino.ORDER_NONE]},Blockly.Arduino.inout_buildin_led=function(){var n=this.getFieldValue("STAT");return Blockly.Arduino.setups_.setup_output_13="pinMode(13, OUTPUT);","digitalWrite(13, "+n+");\n"},Blockly.Arduino.inout_digital_write=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");return Blockly.Arduino.setups_["setup_output_"+n]="pinMode("+n+", OUTPUT);","digitalWrite("+n+", "+e+");\n"},Blockly.Arduino.inout_digital_read=function(){var n=this.getFieldValue("PIN");return Blockly.Arduino.setups_["setup_input_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.inout_analog_write=function(){return"analogWrite("+this.getFieldValue("PIN")+", "+Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_ATOMIC)+");\n"},Blockly.Arduino.inout_analog_read=function(){return["analogRead("+this.getFieldValue("PIN")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.inout_tone=function(){var n=this.getFieldValue("PIN"),e=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.setups_["setup_output"+n]="pinMode("+n+", OUTPUT);","tone("+n+", "+e+");\n"},Blockly.Arduino.inout_notone=function(){var n=this.getFieldValue("PIN");return Blockly.Arduino.setups_["setup_output"+n]="pinMode("+n+", OUTPUT);","noTone("+n+");\n"},Blockly.Arduino.inout_highlow=function(){return["HIGH"==this.getFieldValue("BOOL")?"HIGH":"LOW",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.servo_move=function(){var n=this.getFieldValue("PIN"),e=Blockly.Arduino.valueToCode(this,"DEGREE",Blockly.Arduino.ORDER_ATOMIC);return Blockly.Arduino.definitions_.define_servo="#include <Servo.h>\n",Blockly.Arduino.definitions_["var_servo"+n]="Servo servo_"+n+";\n",Blockly.Arduino.setups_["setup_servo_"+n]="servo_"+n+".attach("+n+");\n","servo_"+n+".write("+e+");\n"},Blockly.Arduino.servo_read_degrees=function(){var n=this.getFieldValue("PIN");return Blockly.Arduino.definitions_.define_servo="#include &lt;Servo.h&gt;\n",Blockly.Arduino.definitions_["var_servo"+n]="Servo servo_"+n+";\n",Blockly.Arduino.setups_["setup_servo_"+n]="servo_"+n+".attach("+n+");\n","servo_"+n+".read()"},Blockly.Arduino.serial_print=function(){var n=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC)||"0";return Blockly.Arduino.setups_["setup_serial_"+i.default.serial]="Serial.begin("+i.default.serial+");\n","Serial.println("+n+");\n"},Blockly.Arduino.loops={},Blockly.Arduino.controls_for=function(){var n=Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),e=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",o=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",i=Blockly.Arduino.statementToCode(this,"DO");if(Blockly.Arduino.INFINITE_LOOP_TRAP&&(i=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+i),e.match(/^-?\d+(\.\d+)?$/)&&o.match(/^-?\d+(\.\d+)?$/)){var l=parseFloat(e)<=parseFloat(o);i="for ("+n+" = "+e+"; "+n+(l?" <= ":" >= ")+o+"; "+n+(l?"++":"--")+") {\n"+i+"}\n"}else i="",l=e,e.match(/^\w+$/)||e.match(/^-?\d+(\.\d+)?$/)||(i+="int "+(l=Blockly.Arduino.variableDB_.getDistinctName(n+"_start",Blockly.Variables.NAME_TYPE))+" = "+e+";\n"),e=o,o.match(/^\w+$/)||o.match(/^-?\d+(\.\d+)?$/)||(i+="int "+(e=Blockly.Arduino.variableDB_.getDistinctName(n+"_end",Blockly.Variables.NAME_TYPE))+" = "+o+";\n"),i+="for ("+n+" = "+l+";\n    ("+l+" <= "+e+") ? "+n+" <= "+e+" : "+n+" >= "+e+";\n    "+n+" += ("+l+" <= "+e+") ? 1 : -1) {\n"+branch0+"}\n";return i},Blockly.Arduino.controls_whileUntil=function(){var n="UNTIL"==this.getFieldValue("MODE"),e=Blockly.Arduino.valueToCode(this,"BOOL",n?Blockly.Arduino.ORDER_LOGICAL_NOT:Blockly.Arduino.ORDER_NONE)||"false",o=Blockly.Arduino.statementToCode(this,"DO");return Blockly.Arduino.INFINITE_LOOP_TRAP&&(o=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o),n&&(e="!"+e),"while ("+e+") {\n"+o+"}\n"},Blockly.Arduino.grove={},Blockly.Arduino.grove_led=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");return Blockly.Arduino.setups_["setup_green_led_"+n]="pinMode("+n+", OUTPUT);","digitalWrite("+n+","+e+");\n"},Blockly.Arduino.grove_button=function(){var n=this.getFieldValue("PIN");return Blockly.Arduino.setups_["setup_button_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_rotary_angle=function(){return["analogRead("+this.getFieldValue("PIN")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_tilt_switch=function(){var n=this.getFieldValue("PIN");return Blockly.Arduino.setups_["setup_tilt_switch_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_piezo_buzzer=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");return Blockly.Arduino.setups_["setup_piezo_buzzer_"+n]="pinMode("+n+", OUTPUT);","digitalWrite("+n+","+e+");\n"},Blockly.Arduino.grove_relay=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");return Blockly.Arduino.setups_["setup_relay_"+n]="pinMode("+n+", OUTPUT);","digitalWrite("+n+","+e+");\n"},Blockly.Arduino.grove_temporature_sensor=function(){var n=this.getFieldValue("PIN");return["round((1/(log((float)(1023-analogRead("+n+"))*10000/analogRead("+n+"))/10000)/3975+1/298.15)-273.15)",Blockly.Arduino.ORDER_ATOMIC]};var l=function(n){var e=n;e=parseInt(e)?parseInt(n)+1:"A"+(parseInt(e.slice(1,e.length))+1);n=i.default.digital.length;for(var o=!0,l=0;l<n;l++)i.default.digital[l][1]==e&&(o=!1);return o?(alert("Grove Sensor needs PIN#+1 port, current setting is out of bound."),null):e};function t(n){return parseInt(d(n).substring(0,2),16)}function r(n){return parseInt(d(n).substring(2,4),16)}function u(n){return parseInt(d(n).substring(4,6),16)}function d(n){return"#"==n.charAt(0)?n.substring(1,7):n}Blockly.Arduino.grove_serial_lcd_print=function(){var n=this.getFieldValue("PIN"),e=Blockly.Arduino.valueToCode(this,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"''",o=Blockly.Arduino.valueToCode(this,"TEXT2",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"''",i=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC)||"1000";Blockly.Arduino.definitions_.define_seriallcd="#include <SerialLCD.h>\n",Blockly.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";var t=l(n);return Blockly.Arduino.definitions_["var_lcd_"+n]="SerialLCD slcd_"+n+"("+n+","+t+");\n",Blockly.Arduino.setups_["setup_lcd_"+n]="slcd_"+n+".begin();\n",t="slcd_"+n+".backlight();\nslcd_"+n+".setCursor(0,0);\n",t+="slcd_"+n+".print("+e+");\n",t+="slcd_"+n+".setCursor(0,1);\n",(t+="slcd_"+n+".print("+o+");\n")+"delay("+i+");\n"},Blockly.Arduino.grove_serial_lcd_power=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");Blockly.Arduino.definitions_.define_seriallcd="#include <SerialLCD.h>\n",Blockly.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";var o=l(n);return Blockly.Arduino.definitions_["var_lcd"+n]="SerialLCD slcd_"+n+"("+n+","+o+");\n",n="slcd_"+n,"ON"===e?n+".Power();\n":n+".noPower();\n"},Blockly.Arduino.grove_serial_lcd_effect=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");Blockly.Arduino.definitions_.define_seriallcd="#include <SerialLCD.h>\n",Blockly.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";var o=l(n);return Blockly.Arduino.definitions_["var_lcd"+n]="SerialLCD slcd_"+n+"("+n+","+o+");\n",n="slcd_"+n,"LEFT"===e?n+".scrollDisplayLeft();\n":"RIGHT"===e?n+".scrollDisplayRight();\n":n+".autoscroll();\n"},Blockly.Arduino.grove_sound_sensor=function(){return["analogRead("+this.getFieldValue("PIN")+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_pir_motion_sensor=function(){var n=this.getFieldValue("PIN");return Blockly.Arduino.setups_["setup_input_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_line_finder=function(){var n=this.getFieldValue("PIN");return Blockly.Arduino.setups_["setup_input_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_ultrasonic_ranger=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("UNIT");return Blockly.Arduino.definitions_.define_ultrasonic="#include <Ultrasonic.h>\n",Blockly.Arduino.definitions_["var_ultrasonic"+n]="Ultrasonic ultrasonic_"+n+"("+n+");",["cm"===e?"ultrasonic_"+n+".MeasureInCentimeters()":"ultrasonic_"+n+".MeasureInInches()",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_motor_shield=function(){var n=this.getFieldValue("DIRECTION");Blockly.Arduino.setups_.setup_motor="pinMode(8,OUTPUT);//I1\n  pinMode(11,OUTPUT);//I2\n  pinMode(9,OUTPUT);//speedPinA\n  pinMode(12,OUTPUT);//I3\n  pinMode(13,OUTPUT);//i4\n  pinMode(10,OUTPUT);//speedPinB\n";var e="";return"forward"===n?(Blockly.Arduino.definitions_.define_forward="void forward()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\n  digitalWrite(12,LOW);\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\n  digitalWrite(8,HIGH);\n}\n",e="forward();\n"):"right"===n?(Blockly.Arduino.definitions_.define_right="void right()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\n  digitalWrite(12,HIGH);\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\n  digitalWrite(8,HIGH);\n}\n\n",e="right();\n"):"left"===n?(Blockly.Arduino.definitions_.define_left="void left()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\n  digitalWrite(12,LOW);\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\n  digitalWrite(8,LOW);\n}\n\n",e="left();\n"):"backward"===n?(Blockly.Arduino.definitions_.define_backward="void backward()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\n  digitalWrite(12,HIGH);\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\n  digitalWrite(8,LOW);\n}\n\n",e="backward();\n"):"stop"===n&&(Blockly.Arduino.definitions_.define_stop="void stop()\n{\ndigitalWrite(9,LOW);// Unenble the pin, to stop the motor. this should be done to avid damaging the motor.\ndigitalWrite(10,LOW);\ndelay(1000);\n}\n\n",e="stop();\n"),e},Blockly.Arduino.grove_thumb_joystick=function(){var n=this.getFieldValue("PIN");return["analogRead("+("y"===this.getFieldValue("AXIS")?l(n):n)+")",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.grove_rgb_led=function(){var n=this.getFieldValue("PIN"),e=l(n);if(Blockly.Arduino.setups_["setup_input_"+n]="pinMode("+n+", OUTPUT);",Blockly.Arduino.setups_["setup_input_"+e]="pinMode("+e+", OUTPUT);",Blockly.Arduino.definitions_.define_uint8="#define uint8 unsigned char",Blockly.Arduino.definitions_.define_uint16="#define uint16 unsigned int",Blockly.Arduino.definitions_.define_uint32="#define uint32 unsigned long int",Blockly.Arduino.definitions_["define_clkproduce_"+n]="void ClkProduce_"+n+"(void)\n{\n  digitalWrite("+n+", LOW);\n  delayMicroseconds(20);\n  digitalWrite("+n+", HIGH);\n  delayMicroseconds(20);\n}\n",Blockly.Arduino.definitions_["define_send32zero_"+n]="void Send32Zero_"+n+"(void)\n{\n  uint8 i;\n  for (i=0; i<32; i++)\n  {\n    digitalWrite("+e+", LOW);\n    ClkProduce_"+n+"();\n  }\n}\n",Blockly.Arduino.definitions_.define_taskanticode="uint8 TakeAntiCode(uint8 dat)\n{\n  uint8 tmp = 0;\n  if ((dat & 0x80) == 0)\n  {\n    tmp |= 0x02;\n  }\n  \n  if ((dat & 0x40) == 0)\n  {\n    tmp |= 0x01;\n  }\n  return tmp;\n}\n",Blockly.Arduino.definitions_["define_datasend_"+n]="// gray data\nvoid DatSend_"+n+"(uint32 dx)\n{\n  uint8 i;\n  for (i=0; i<32; i++)\n  {\n    if ((dx & 0x80000000) != 0)\n    {\n      digitalWrite("+e+", HIGH);\n    }\n    else\n    {\n      digitalWrite("+e+", LOW);\n    }\n  dx <<= 1;\n  ClkProduce_"+n+"();\n  }\n}\n",Blockly.Arduino.definitions_["define_datadealwithsend_"+n]="// data processing\nvoid DataDealWithAndSend_"+n+"(uint8 r, uint8 g, uint8 b)\n{\n  uint32 dx = 0;\n  dx |= (uint32)0x03 << 30;             // highest two bits 1，flag bits\n  dx |= (uint32)TakeAntiCode(b) << 28;\n  dx |= (uint32)TakeAntiCode(g) << 26;\n  dx |= (uint32)TakeAntiCode(r) << 24;\n\n  dx |= (uint32)b << 16;\n  dx |= (uint32)g << 8;\n  dx |= r;\n\n  DatSend_"+n+"(dx);\n}\n",e="Send32Zero_"+n+"(); // begin\n",0==this.itemCount_)return"";for(var o=0;o<this.itemCount_;o++){var i=this.getFieldValue("RGB"+o);e=e+"DataDealWithAndSend_"+n+"("+t(i)+", "+r(i)+", "+u(i)+"); // first node data\n"}return e+"Send32Zero_"+n+"();  // send to update data\n"},Blockly.Arduino.grove_bluetooth_slave=function(){var n=this.getFieldValue("PIN"),e=l(n),o=this.getFieldValue("NAME");this.getFieldValue("PINCODE");var i=Blockly.Arduino.statementToCode(this,"RCV"),t=Blockly.Arduino.statementToCode(this,"SNT");return Blockly.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n",Blockly.Arduino.definitions_["var_bluetooth_"+n]="SoftwareSerial blueToothSerial_"+n+"("+n+","+e+");\n",Blockly.Arduino.setups_["setup_bluetooth_"+n]="Serial.begin(9600);\n",Blockly.Arduino.setups_["setup_bluetooth_"+n]+="  pinMode("+n+", INPUT);\n",Blockly.Arduino.setups_["setup_bluetooth_"+n]+="  pinMode("+e+", OUTPUT);\n",Blockly.Arduino.setups_["setup_bluetooth_"+n]+="  setupBlueToothConnection_"+n+"();\n",Blockly.Arduino.definitions_["define_setupBlueToothConnection_"+n]="void setupBlueToothConnection_"+n+"()\n{\n  blueToothSerial_"+n+".begin(38400); //Set BluetoothBee BaudRate to default baud rate 38400\n  blueToothSerial_"+n+'.print("\\r\\n+STWMOD=0\\r\\n"); //set the bluetooth work in slave mode\n  blueToothSerial_'+n+'.print("\\r\\n+STNA='+o+'\\r\\n"); //set the bluetooth name as "'+o+'"\n  blueToothSerial_'+n+'.print("\\r\\n+STPIN=0000\\r\\n");//Set SLAVE pincode"0000"\n  blueToothSerial_'+n+'.print("\\r\\n+STOAUT=1\\r\\n"); // Permit Paired device to connect me\n  blueToothSerial_'+n+'.print("\\r\\n+STAUTO=0\\r\\n"); // Auto-connection should be forbidden here\n  delay(2000); // This delay is required.\n  blueToothSerial_'+n+'.print("\\r\\n+INQ=1\\r\\n"); //make the slave bluetooth inquirable \n  Serial.println("The slave bluetooth is inquirable!");\n  delay(2000); // This delay is required.\n  blueToothSerial_'+n+".flush();\n}\n","char recvChar_"+n+";\nwhile(1) {\n  if(blueToothSerial_"+n+".available()) {//check if there is any data sent from the remote bluetooth shield\n    recvChar_"+n+" = blueToothSerial_"+n+".read();\n    Serial.print(recvChar_"+n+");\n"+i+"  }\n  if(Serial.available()){//check if there is any data sent from the local serial terminal, you can add the other applications here\n    recvChar_"+n+" = Serial.read();\n    blueToothSerial_"+n+".print(recvChar_"+n+");\n"+t+"  }\n}\n"},Blockly.Arduino.logic={},Blockly.Arduino.controls_if=function(){var n=0,e=Blockly.Arduino.valueToCode(this,"IF"+n,Blockly.Arduino.ORDER_NONE)||"false",o=Blockly.Arduino.statementToCode(this,"DO"+n),i="if ("+e+") {\n"+o+"\n}";for(n=1;n<=this.elseifCount_;n++)i+=" else if ("+(e=Blockly.Arduino.valueToCode(this,"IF"+n,Blockly.Arduino.ORDER_NONE)||"false")+") {\n"+(o=Blockly.Arduino.statementToCode(this,"DO"+n))+"}";return this.elseCount_&&(i+=" else {\n"+(o=Blockly.Arduino.statementToCode(this,"ELSE"))+"\n}"),i+"\n"},Blockly.Arduino.logic_compare=function(){var n=this.getFieldValue("OP"),e="=="==(n=Blockly.Arduino.logic_compare.OPERATORS[n])||"!="==n?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL;return[(Blockly.Arduino.valueToCode(this,"A",e)||"0")+" "+n+" "+(Blockly.Arduino.valueToCode(this,"B",e)||"0"),e]},Blockly.Arduino.logic_compare.OPERATORS={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="},Blockly.Arduino.logic_operation=function(){var n="AND"==this.getFieldValue("OP")?"&&":"||",e="&&"==n?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR;return[(Blockly.Arduino.valueToCode(this,"A",e)||"false")+" "+n+" "+(Blockly.Arduino.valueToCode(this,"B",e)||"false"),e]},Blockly.Arduino.logic_negate=function(){var n=Blockly.Arduino.ORDER_UNARY_PREFIX;return["!"+(Blockly.Arduino.valueToCode(this,"BOOL",n)||"false"),n]},Blockly.Arduino.logic_boolean=function(){return["TRUE"==this.getFieldValue("BOOL")?"true":"false",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.logic_null=function(){return["NULL",Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.math={},Blockly.Arduino.math_number=function(){var n=window.parseFloat(this.getFieldValue("NUM"));return[n,0>n?Blockly.Arduino.ORDER_UNARY_PREFIX:Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.math_arithmetic=function(){var n=this.getFieldValue("OP"),e=(n=(e=Blockly.Arduino.math_arithmetic.OPERATORS[n])[0],e[1]),o=Blockly.Arduino.valueToCode(this,"A",e)||"0",i=Blockly.Arduino.valueToCode(this,"B",e)||"0";return n?[o+n+i,e]:["Math.pow("+o+", "+i+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Arduino.math_arithmetic.OPERATORS={ADD:[" + ",Blockly.Arduino.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Arduino.ORDER_NONE]},Blockly.Arduino.procedures={},Blockly.Arduino.procedures_defreturn=function(){var n=Blockly.Arduino.variableDB_.getName(this.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),e=Blockly.Arduino.statementToCode(this,"STACK");Blockly.Arduino.INFINITE_LOOP_TRAP&&(e=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+e);var o=Blockly.Arduino.valueToCode(this,"RETURN",Blockly.Arduino.ORDER_NONE)||"";o&&(o="  return "+o+";\n");for(var i=o?"int":"void",l=[],t=0;t<this.arguments_.length;t++)l[t]="int "+Blockly.Arduino.variableDB_.getName(this.arguments_[t],Blockly.Variables.NAME_TYPE);return e=i+" "+n+"("+l.join(", ")+") {\n"+e+o+"}\n",e=Blockly.Arduino.scrub_(this,e),Blockly.Arduino.definitions_[n]=e,null},Blockly.Arduino.procedures_defnoreturn=Blockly.Arduino.procedures_defreturn,Blockly.Arduino.procedures_callreturn=function(){for(var n=Blockly.Arduino.variableDB_.getName(this.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),e=[],o=0;o<this.arguments_.length;o++)e[o]=Blockly.Arduino.valueToCode(this,"ARG"+o,Blockly.Arduino.ORDER_NONE)||"null";return[n+"("+e.join(", ")+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Arduino.procedures_callnoreturn=function(){for(var n=Blockly.Arduino.variableDB_.getName(this.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),e=[],o=0;o<this.arguments_.length;o++)e[o]=Blockly.Arduino.valueToCode(this,"ARG"+o,Blockly.Arduino.ORDER_NONE)||"null";return n+"("+e.join(", ")+");\n"},Blockly.Arduino.procedures_ifreturn=function(){var n="if ("+(Blockly.Arduino.valueToCode(this,"CONDITION",Blockly.Arduino.ORDER_NONE)||"false")+") {\n";if(this.hasReturnValue_)n=n+"  return "+(Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE)||"null")+";\n";else n+="  return;\n";return n+"}\n"},Blockly.Arduino.texts={},Blockly.Arduino.text=function(){return[Blockly.Arduino.quote_(this.getFieldValue("TEXT")),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.variables={},Blockly.Arduino.variables_get=function(){return[Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Arduino.ORDER_ATOMIC]},Blockly.Arduino.variables_declare=function(){this.getFieldValue("TYPE");var n=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",e=Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);return Blockly.Arduino.setups_["setup_var"+e]=e+" = "+n+";\n",""},Blockly.Arduino.variables_set=function(){var n=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+n+";\n"}}]);